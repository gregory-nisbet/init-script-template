#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

dir=""
cmd=""
user=""
mypid=""
exit_status=0

name="$(basename "$0")"
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps "$(get_pid)" 1>/dev/null 2>/dev/null
}

start() {
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
    fi
    cd "$dir"

    if [ -z "$user"] ; then
        1>>"$stdout_log" 2>>"$stderr_log" sudo -- $cmd &
        mypid="$!"
    else
        1>>"$stdout_log" 2>>"$stderr_log" sudo -- $cmd &
        mypid="$!"
    fi
}

stop() {
    if is_running; then
        echo -n "Stopping $name.."
        kill -TERM "$(get_pid)"
        
        for i in 1 2 3 4 5 6 7 8 9 10; do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit_status=1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
}

restart() {
    stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit_status=1
    else
        start
    fi
}

status() {
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit_status=1
    fi
}

usage() {
    echo "Usage: $0 {start|stop|restart|status}"
    exit_status=1
}

case "$1" in
    start) 
        start
        ;;
    stop) 
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *) 
        usage
        ;;
esac

exit "$status"
